<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- web.xml 中shiro 的filter 对应的bean -->
    <!-- Shiro 的Web 过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 配置securityManager安全管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl 认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <!--如果不配置该属性，默认情况下会到根路径下的login.jsp-->
        <property name="loginUrl" value="/loginPage"/>
        <!-- 认证成功统一跳转到index，建议不配置，shiro认证成功后自动跳转到上一个请求路径 -->
        <property name="successUrl" value="/index"/>
        <!-- 通过unauthorizedUrl指定没有权限操作资源时跳转的页面 -->
        <property name="unauthorizedUrl" value="/unauth.jsp"/>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边，logout默认退出后跳转到根路径下，可以从新指定 -->
        <property name="filters">
            <util:map>
                <entry key="auth">
                    <bean class="com.jeff.common.shiro.AuthorizeFilter"/>
                </entry>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                <!-- /** = anon 所有url 都可以匿名访问 -->
                <!-- /** = authc 所有url 都必须认证通过才可以访问 -->
                /static/** = anon
                /loginPage=anon
                /login=anon
                /logout=logout
                /** = auth
            </value>
        </property>
    </bean>
    <!-- securityManager 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="cacheManager" ref="redisCacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>
    <!-- 配置自定义realm -->
    <bean id="userRealm" class="com.jeff.common.shiro.UserRealm">
        <!-- 将凭证匹配器设置到realm 中，realm 按照凭证匹配器的要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cacheManager" ref="redisCacheManager"/>
    </bean>
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--算法名称-->
        <property name="hashAlgorithmName" value="md5"/>
        <!--迭代次数-->
        <property name="hashIterations" value="3"/>
    </bean>
    <!-- 配置logout过滤器，默认退出后跳转到根路径下，如果需要改变则重新配置logout过滤器 -->
    <!--<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/loginPage"></property>
    </bean>-->
    <!-- 配置缓存管理器 -->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>-->
    <!-- 配置会话管理器 -->
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <!-- 单位是毫秒 -->
    <!--<property name="globalSessionTimeout" value="300000"></property>-->
    <!-- 删除无效session -->
    <!--<property name="deleteInvalidSessions" value="true"></property>-->
    <!--</bean>-->
    <!-- 记住我配置 -->
    <!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>-->
    <!-- 记住我cookie -->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
    <!-- 设置cookie的存活时间 -->
    <!--<property name="maxAge" value="604800"/>-->
    <!-- 设置cookie的名称 -->
    <!--<property name="name" value="rememberMe"/>-->
    <!--</bean>-->
    <!--shiro-redis redisCacheManager-->
    <bean id="redisCacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="keyPrefix" value="shiro_redis_session:"/>
        <property name="redisManager" ref="redisClient"/>
    </bean>
    <!--redisSessionDAO-->
    <bean id="redisSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"></bean>
    <!--simpleCookie,不定义在集群环境下会出现There is no session with id ....-->
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="custom.session"/>
        <property name="path" value="/"/>
    </bean>
    <!--sessionManager-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="sessionIdCookie" ref="simpleCookie"/>
    </bean>
</beans>